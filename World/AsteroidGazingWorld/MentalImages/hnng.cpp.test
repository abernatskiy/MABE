// compile with g++ -std=c++11 -o testhnng -x c++ hnng.cpp.test hnng.cpp labeledHNNG.cpp

#include <iostream>

#include "labeledHNNG.h"

using namespace std;

int main(int argc, char** argv) {

	LabeledHNNG gen(30, 16);

	const map<pair<string,string>,unsigned> testrawdb
	{ {{"1","aabbcc"},5},
	  {{"1","abbacc"},10},
	  {{"5","abbacd"},7},
	  {{"6","45716a"},2},
	  {{"4","bbaccde"},6},
	  {{"2","225566"},10} };

	gen.index(testrawdb);

	gen.print();

	string testPat("aabbcc");

	vector<tuple<string,string,unsigned,size_t>> neighbors = gen.getSomeNeighbors(testPat, 3);

	cout << "Got nearest neighbors for " << testPat << ":" << endl;
	for(const auto& neighstruct : neighbors) {
		string label, pattern;
		unsigned value;
		size_t distance;

		tie(label, pattern, value, distance) = neighstruct;

		cout << "(" << label << "," << pattern << ":" << value << "," << distance << ")" << endl;
	}

	cout << "Performance stats:" << endl;
	gen.printPerformanceStats();

	return 0;
}
